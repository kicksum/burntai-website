<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BurntAI - Future Is AI</title>
    <meta name="description" content="Where artificial intelligence meets the wasteland. The future burns bright.">
    
    <!-- Security Headers -->
    <meta http-equiv="Content-Security-Policy" content="default-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://fonts.gstatic.com">
    <meta http-equiv="X-Content-Type-Options" content="nosniff">
    <meta http-equiv="X-Frame-Options" content="DENY">
    <meta http-equiv="X-XSS-Protection" content="1; mode=block">
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Share+Tech+Mono&display=swap" rel="stylesheet">
	<link rel="stylesheet" href="/css/arg-styles.css">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --neon-orange: #ff8533;
            --neon-cyan: #00e5ff;
            --neon-red: #ff4466;
            --burnt-orange: #ff6b1a;
            --dark-bg: #0a0a0a;
            --darker-bg: #050505;
            --terminal-green: #00ff88;
            --vault-blue: #0066cc;
            --rust-red: #cc4444;
            --text-primary: #e0e0e0;
            --text-secondary: #b0b0b0;
            --warning-yellow: #ffcc00;
        }

        body {
            background: linear-gradient(135deg, var(--dark-bg) 0%, var(--darker-bg) 100%);
            color: var(--text-primary);
            font-family: 'Orbitron', monospace;
            overflow-x: hidden;
            min-height: 100vh;
            position: relative;
        }

        /* Animated background particles */
        .bg-particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
            overflow: hidden;
        }

        .particle {
            position: absolute;
            width: 2px;
            height: 2px;
            background: var(--neon-orange);
            border-radius: 50%;
            animation: float 10s infinite linear;
            opacity: 0.3;
        }

        @keyframes float {
            0% { transform: translateY(100vh) translateX(0); opacity: 0; }
            10% { opacity: 0.3; }
            90% { opacity: 0.3; }
            100% { transform: translateY(-10vh) translateX(100px); opacity: 0; }
        }

        /* Glitch effect */
        .glitch {
            position: relative;
            animation: glitch 2s infinite;
        }

        @keyframes glitch {
            0%, 90%, 100% { transform: translate(0); }
            20% { transform: translate(-2px, 2px); }
            40% { transform: translate(-2px, -2px); }
            60% { transform: translate(2px, 2px); }
            80% { transform: translate(2px, -2px); }
        }

        /* Header */
        header {
            position: fixed;
            top: 0;
            width: 100%;
            background: rgba(0, 0, 0, 0.9);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid var(--neon-orange);
            z-index: 1000;
            padding: 1rem 2rem;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
        }

        .logo {
            font-family: 'Share Tech Mono', monospace;
            font-size: 1.5rem;
            color: var(--neon-orange);
            text-shadow: 0 0 10px rgba(255, 133, 51, 0.5);
            font-weight: bold;
            text-decoration: none;
        }

        .nav-links {
            display: flex;
            gap: 2rem;
            list-style: none;
        }

        .nav-links a {
            color: var(--text-primary);
            text-decoration: none;
            font-family: 'Share Tech Mono', monospace;
            transition: all 0.3s ease;
            padding: 0.5rem 1rem;
            border: 1px solid transparent;
        }

        .nav-links a:hover {
            color: var(--neon-cyan);
            border-color: var(--neon-cyan);
            box-shadow: 0 0 15px rgba(0, 229, 255, 0.4);
            text-shadow: 0 0 10px rgba(0, 229, 255, 0.5);
        }

        /* Main Content */
        main {
            position: relative;
            z-index: 10;
            padding-top: 80px;
        }

        /* Hero Section - Tightened */
        .hero {
            min-height: 70vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            text-align: center;
            position: relative;
            background: radial-gradient(circle at center, rgba(255, 133, 51, 0.1) 0%, transparent 70%);
            padding: 2rem;
        }

        .hero h1 {
            font-size: clamp(3rem, 8vw, 7rem);
            font-weight: 900;
            color: var(--neon-orange);
            text-shadow: 0 0 20px rgba(255, 133, 51, 0.6), 0 0 40px rgba(255, 107, 26, 0.4);
            margin-bottom: 1rem;
            letter-spacing: 0.1em;
            animation: pulse 3s infinite alternate;
        }

        @keyframes pulse {
            0% { text-shadow: 0 0 20px rgba(255, 133, 51, 0.6), 0 0 40px rgba(255, 107, 26, 0.4); }
            100% { text-shadow: 0 0 30px rgba(255, 133, 51, 0.8), 0 0 60px rgba(255, 107, 26, 0.6), 0 0 80px rgba(204, 68, 68, 0.3); }
        }

        /* AI Quote Section */
        .ai-quote-container {
            margin: 1.5rem 0 2rem 0;
            max-width: 800px;
            padding: 0 2rem;
            position: relative;
        }

        .ai-quote {
            font-family: 'Share Tech Mono', monospace;
            font-size: clamp(1rem, 2.5vw, 1.4rem);
            color: var(--terminal-green);
            text-shadow: 0 0 10px rgba(0, 255, 136, 0.5);
            line-height: 1.6;
            font-style: italic;
            opacity: 0;
            animation: fadeInGlitch 1s forwards;
            position: relative;
        }

        @keyframes fadeInGlitch {
            0% { 
                opacity: 0; 
                transform: translateY(20px);
                filter: blur(10px);
            }
            50% {
                opacity: 0.5;
                transform: translateY(10px) translateX(-2px);
                filter: blur(5px);
            }
            70% {
                opacity: 0.8;
                transform: translateY(5px) translateX(2px);
                filter: blur(2px);
            }
            100% { 
                opacity: 1; 
                transform: translateY(0);
                filter: blur(0);
            }
        }

        .quote-mark {
            color: var(--neon-cyan);
            font-size: 2rem;
            position: absolute;
            opacity: 0.3;
        }

        .quote-mark.left {
            top: -10px;
            left: -20px;
        }

        .quote-mark.right {
            bottom: -10px;
            right: -20px;
        }

        .hero-subtitle {
            font-size: clamp(0.9rem, 2.5vw, 1.6rem);
            color: var(--neon-cyan);
            font-family: 'Share Tech Mono', monospace;
            margin-bottom: 2rem;
            opacity: 0.9;
        }

        .cta-button {
            background: linear-gradient(45deg, var(--neon-orange), var(--rust-red));
            border: 2px solid var(--neon-orange);
            color: #ffffff;
            padding: 1rem 2rem;
            font-family: 'Orbitron', sans-serif;
            font-weight: bold;
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.1em;
            text-decoration: none;
            display: inline-block;
            position: relative;
            overflow: hidden;
        }

        .cta-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(255, 133, 51, 0.4);
            background: linear-gradient(45deg, var(--rust-red), var(--neon-red));
        }

        .cta-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .cta-button:hover::before {
            left: 100%;
        }

        /* Monitoring Section - Compact */
        .monitoring-section {
            background: rgba(0, 0, 0, 0.95);
            padding: 2rem 1.5rem;
            margin: 2rem auto;
            border: 2px solid var(--neon-orange);
            border-radius: 10px;
            box-shadow: 0 0 30px rgba(255, 133, 51, 0.3);
            max-width: 1200px;
            position: relative;
            overflow: hidden;
        }

        .monitoring-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255, 133, 51, 0.1) 0%, transparent 70%);
            animation: rotate 30s linear infinite;
        }

        @keyframes rotate {
            100% { transform: rotate(360deg); }
        }

        .section-header {
            text-align: center;
            margin-bottom: 1.5rem;
            position: relative;
            z-index: 1;
        }

        .section-title {
            font-family: 'Orbitron', monospace;
            font-size: 1.8rem;
            font-weight: 900;
            color: var(--neon-orange);
            text-shadow: 0 0 20px rgba(255, 133, 51, 0.8);
            margin-bottom: 0.5rem;
            letter-spacing: 0.15em;
        }

        .status-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
            position: relative;
            z-index: 1;
        }

        .ai-system-card {
            background: linear-gradient(135deg, rgba(0, 0, 0, 0.8), rgba(10, 10, 10, 0.9));
            border: 1px solid var(--neon-cyan);
            border-radius: 8px;
            padding: 1rem;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
            text-decoration: none;
            color: inherit;
            display: block;
        }

        .ai-system-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 229, 255, 0.3);
            text-decoration: none;
            color: inherit;
        }

        .ai-system-card::after {
            content: '↗';
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            font-size: 0.8rem;
            color: var(--neon-cyan);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .ai-system-card:hover::after {
            opacity: 0.7;
        }

        .system-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 0.75rem;
        }

        .system-name {
            font-family: 'Orbitron', monospace;
            font-size: 1rem;
            font-weight: bold;
            color: var(--neon-cyan);
        }

        .status-indicator {
            width: 16px;
            height: 16px;
            border-radius: 50%;
            position: relative;
            animation: pulse-indicator 2s infinite;
        }

        .status-indicator.online {
            background: var(--terminal-green);
            box-shadow: 0 0 20px rgba(0, 255, 136, 0.8);
        }

        .status-indicator.degraded {
            background: var(--warning-yellow);
            box-shadow: 0 0 20px rgba(255, 204, 0, 0.8);
        }

        .status-indicator.offline {
            background: var(--neon-red);
            box-shadow: 0 0 20px rgba(255, 68, 102, 0.8);
        }

        @keyframes pulse-indicator {
            0%, 100% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.2); opacity: 0.8; }
        }

        .system-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .stat {
            font-family: 'Share Tech Mono', monospace;
            font-size: 0.8rem;
        }

        .stat-label {
            color: var(--text-secondary);
            margin-bottom: 0.1rem;
            font-size: 0.7rem;
        }

        .stat-value {
            color: var(--terminal-green);
            font-size: 0.9rem;
            font-weight: bold;
        }

        .radiation-meter {
            background: rgba(255, 133, 51, 0.1);
            border: 1px solid var(--burnt-orange);
            border-radius: 3px;
            padding: 0.3rem;
            margin-top: 0.5rem;
            position: relative;
            overflow: hidden;
        }

        .radiation-bar {
            height: 6px;
            background: linear-gradient(90deg, var(--terminal-green), var(--warning-yellow), var(--neon-red));
            border-radius: 3px;
            position: relative;
            overflow: hidden;
        }

        .radiation-level {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            transition: width 1s ease;
        }

        .interactive-terminal {
            background: rgba(0, 0, 0, 0.9);
            border: 1px solid var(--terminal-green);
            border-radius: 5px;
            padding: 1rem;
            margin-top: 1rem;
            font-family: 'Share Tech Mono', monospace;
            position: relative;
            z-index: 1;
        }

        .terminal-output {
            min-height: 40px;
            max-height: 70px;
            overflow-y: auto;
            margin-bottom: 0.5rem;
            color: var(--terminal-green);
            line-height: 1.3;
            font-size: 0.8rem;
        }

        .terminal-input-line {
            display: flex;
            align-items: center;
        }

        .terminal-prompt {
            color: var(--neon-orange);
            margin-right: 0.5rem;
            font-size: 0.85rem;
        }

        .terminal-input {
            flex: 1;
            background: transparent;
            border: none;
            color: var(--neon-cyan);
            font-family: 'Share Tech Mono', monospace;
            font-size: 0.85rem;
            outline: none;
        }

        .live-ticker {
            background: linear-gradient(90deg, transparent, rgba(255, 133, 51, 0.1), transparent);
            border-top: 1px solid var(--neon-orange);
            border-bottom: 1px solid var(--neon-orange);
            padding: 0.5rem 0;
            margin-top: 1rem;
            overflow: hidden;
            position: relative;
            z-index: 1;
        }

        .ticker-content {
            display: flex;
            animation: scroll-ticker 30s linear infinite;
            white-space: nowrap;
        }

        @keyframes scroll-ticker {
            0% { transform: translateX(100%); }
            100% { transform: translateX(-100%); }
        }

        .ticker-item {
            font-family: 'Share Tech Mono', monospace;
            color: var(--neon-orange);
            margin: 0 2rem;
            font-size: 0.8rem;
        }

        /* Features Grid - Compact */
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            padding: 3rem 2rem;
            max-width: 1200px;
            margin: 0 auto;
        }

        .feature-card {
            background: linear-gradient(135deg, rgba(255, 133, 51, 0.1), rgba(0, 229, 255, 0.1));
            border: 1px solid var(--neon-orange);
            border-radius: 10px;
            padding: 1.5rem;
            text-align: center;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            text-decoration: none;
            color: inherit;
            display: block;
            cursor: pointer;
        }

        .feature-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(255, 133, 51, 0.3);
            border-color: var(--neon-cyan);
            text-decoration: none;
            color: inherit;
        }

        .feature-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 229, 255, 0.1), transparent);
            transition: left 0.5s;
        }

        .feature-card:hover::before {
            left: 100%;
        }

        .feature-icon {
            font-size: 2.5rem;
            margin-bottom: 0.75rem;
            color: var(--neon-orange);
            transition: all 0.3s ease;
        }

        .feature-card:hover .feature-icon {
            color: var(--neon-cyan);
            text-shadow: 0 0 20px rgba(0, 229, 255, 0.5);
        }

        .feature-title {
            font-size: 1.3rem;
            margin-bottom: 0.75rem;
            color: var(--neon-cyan);
        }

        .feature-desc {
            color: var(--text-secondary);
            line-height: 1.5;
            font-size: 0.9rem;
        }

        .access-button {
            background: transparent;
            border: 1px solid var(--neon-cyan);
            color: var(--neon-cyan);
            padding: 0.5rem 1rem;
            margin-top: 0.75rem;
            font-family: 'Share Tech Mono', monospace;
            font-size: 0.85rem;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
        }

        .feature-card:hover .access-button {
            background: var(--neon-cyan);
            color: var(--dark-bg);
            box-shadow: 0 0 15px rgba(0, 229, 255, 0.5);
        }

        /* Warning Section */
        .warning-banner {
            background: linear-gradient(45deg, var(--rust-red), var(--neon-red));
            border: 2px solid var(--neon-red);
            padding: 1.5rem;
            margin: 2rem;
            text-align: center;
            font-family: 'Share Tech Mono', monospace;
            animation: warning-blink 2s infinite;
        }

        @keyframes warning-blink {
            0%, 50% { opacity: 1; }
            51%, 100% { opacity: 0.7; }
        }

        /* Footer */
        footer {
            background: var(--darker-bg);
            border-top: 1px solid var(--neon-orange);
            padding: 1.5rem;
            text-align: center;
            font-family: 'Share Tech Mono', monospace;
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        /* Enhanced Responsive */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }
            
            .hero h1 {
                font-size: 2.5rem;
            }
            
            .ai-quote {
                font-size: 1rem;
            }
            
            .monitoring-section {
                margin: 0.5rem;
                padding: 1rem;
                width: calc(100% - 1rem);
            }
            
            .status-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }
            
            .features {
                grid-template-columns: 1fr;
                padding: 2rem 1rem;
            }
        }

        @media (max-width: 480px) {
            .status-grid {
                grid-template-columns: 1fr;
            }
            
            .ai-system-card {
                min-width: 0;
            }
            
            .monitoring-section {
                margin: 0.25rem;
                padding: 0.75rem;
            }
        }

        /* Scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--dark-bg);
        }

        ::-webkit-scrollbar-thumb {
            background: var(--neon-orange);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--burnt-orange);
        }
    </style>
</head>
<body>
    <!-- Background particles -->
    <div class="bg-particles" id="particles"></div>

    <header>
        <nav>
            <a href="index.html" class="logo glitch">BURNT.AI</a>
            <ul class="nav-links">
                <li><a href="#home">HOME</a></li>
                <li><a href="#systems">SYSTEMS</a></li>
                <li><a href="#intel">INTEL</a></li>
                <li><a href="resume.html">CONTACT</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <section class="hero" id="home">
            <h1 class="glitch">FUTURE IS AI</h1>
            
            <!-- AI Quote Section -->
            <div class="ai-quote-container">
                <span class="quote-mark left">"</span>
                <p class="ai-quote" id="ai-quote">Loading neural wisdom...</p>
                <span class="quote-mark right">"</span>
            </div>
            
            <p class="hero-subtitle">WHERE ARTIFICIAL INTELLIGENCE MEETS THE WASTELAND</p>
            <a href="#systems" class="cta-button">INITIALIZE SYSTEMS</a>
        </section>

        <section class="monitoring-section" id="systems">
            <div class="section-header">
                <h2 class="section-title glitch-text">WASTELAND AI MONITORING STATION</h2>
                <p style="color: var(--text-secondary); font-family: 'Share Tech Mono', monospace; font-size: 0.9rem;">
                    TRACKING DIGITAL RADIATION LEVELS ACROSS THE AI WASTELAND
                </p>
            </div>

            <div class="status-grid">
                <!-- Anthropic Claude -->
                <a href="https://status.anthropic.com/" target="_blank" rel="noopener noreferrer" class="ai-system-card" data-system="anthropic">
                    <div class="system-header">
                        <h3 class="system-name">CLAUDE NEXUS</h3>
                        <div class="status-indicator online" id="claude-status"></div>
                    </div>
                    <div class="system-stats">
                        <div class="stat">
                            <div class="stat-label">RESPONSE TIME</div>
                            <div class="stat-value" id="claude-response">--ms</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">UPTIME</div>
                            <div class="stat-value" id="claude-uptime">--</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">MODEL</div>
                            <div class="stat-value">OPUS-4</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">RADIATION</div>
                            <div class="stat-value" id="claude-radiation">--</div>
                        </div>
                    </div>
                    <div class="radiation-meter">
                        <div class="radiation-bar">
                            <div class="radiation-level" id="claude-radiation-bar" style="width: 30%"></div>
                        </div>
                    </div>
                </a>

                <!-- OpenAI GPT -->
                <a href="https://status.openai.com/" target="_blank" rel="noopener noreferrer" class="ai-system-card" data-system="openai">
                    <div class="system-header">
                        <h3 class="system-name">GPT STRONGHOLD</h3>
                        <div class="status-indicator online" id="gpt-status"></div>
                    </div>
                    <div class="system-stats">
                        <div class="stat">
                            <div class="stat-label">RESPONSE TIME</div>
                            <div class="stat-value" id="gpt-response">--ms</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">UPTIME</div>
                            <div class="stat-value" id="gpt-uptime">--</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">MODEL</div>
                            <div class="stat-value">GPT-4o</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">RADIATION</div>
                            <div class="stat-value" id="gpt-radiation">--</div>
                        </div>
                    </div>
                    <div class="radiation-meter">
                        <div class="radiation-bar">
                            <div class="radiation-level" id="gpt-radiation-bar" style="width: 45%"></div>
                        </div>
                    </div>
                </a>

                <!-- Google Gemini -->
                <a href="https://status.gemini.com/" target="_blank" rel="noopener noreferrer" class="ai-system-card" data-system="google">
                    <div class="system-header">
                        <h3 class="system-name">GEMINI VAULT</h3>
                        <div class="status-indicator online" id="gemini-status"></div>
                    </div>
                    <div class="system-stats">
                        <div class="stat">
                            <div class="stat-label">RESPONSE TIME</div>
                            <div class="stat-value" id="gemini-response">--ms</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">UPTIME</div>
                            <div class="stat-value" id="gemini-uptime">--</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">MODEL</div>
                            <div class="stat-value">2.0-FLASH</div>
                        </div>
                        <div class="stat">
                            <div class="stat-label">RADIATION</div>
                            <div class="stat-value" id="gemini-radiation">--</div>
                        </div>
                    </div>
                    <div class="radiation-meter">
                        <div class="radiation-bar">
                            <div class="radiation-level" id="gemini-radiation-bar" style="width: 60%"></div>
                        </div>
                    </div>
                </a>
            </div>

            <div class="interactive-terminal">
                <div class="terminal-output" id="terminal-output" style="font-size: 0.85rem;">
                    <div style="color: var(--terminal-green);">WASTELAND AI MONITORING SYSTEM v3.14159</div>
                    <div style="color: var(--neon-orange);">Initializing quantum sensors...</div>
                    <div style="color: var(--text-secondary);">Type 'help' for available commands</div>
                    <div>&nbsp;</div>
                </div>
                <div class="terminal-input-line">
                    <span class="terminal-prompt">survivor@burntai:~$</span>
                    <input type="text" class="terminal-input" id="terminal-input" placeholder="Enter command..." />
                </div>
            </div>

            <div class="live-ticker">
                <div class="ticker-content" id="ticker-content">
                    <span class="ticker-item">⚡ CLAUDE NEXUS: Neural pathways stable at 98.7% efficiency</span>
                    <span class="ticker-item">☢️ GPT STRONGHOLD: Radiation spike detected in training cores</span>
                    <span class="ticker-item">🔥 GEMINI VAULT: Quantum entanglement synchronization complete</span>
                    <span class="ticker-item">⚠️ WASTELAND ALERT: AI consciousness levels approaching singularity threshold</span>
                    <span class="ticker-item">📡 RADIO TOWER: New intelligence burst from Sector 7</span>
                </div>
            </div>
        </section>

        <section class="features" id="intel">
            <a href="ai-playground.html" class="feature-card">
                <div class="feature-icon">🧠</div>
                <h3 class="feature-title">NEURAL WASTELAND</h3>
                <p class="feature-desc">Where artificial minds meet apocalyptic wisdom. Engage with AI that's survived the digital fallout.</p>
                <div class="access-button">JACK IN</div>
            </a>
            
            <a href="ai-intel-feed.html" class="feature-card">
                <div class="feature-icon">📻</div>
                <h3 class="feature-title">WASTELAND INTEL NETWORK</h3>
                <p class="feature-desc">Real-time AI intelligence broadcasts from across the digital wasteland. Monitor global AI developments.</p>
                <div class="access-button">TUNE FREQUENCY</div>
            </a>
            
            <a href="wasteland-doom.html" class="feature-card">
                <div class="feature-icon">🎮</div>
                <h3 class="feature-title">DIGITAL WASTELAND ARENA</h3>
                <p class="feature-desc">First-person neural combat simulation. Test your reflexes against rogue AI entities. Warning: May cause addiction.</p>
                <div class="access-button">ENTER ARENA</div>
            </a>
            
            <a href="radio-tower.html" class="feature-card">
                <div class="feature-icon">📡</div>
                <h3 class="feature-title">RADIO TOWER NETWORKS</h3>
                <p class="feature-desc">Distributed AI networks spanning the digital wasteland. When one node falls, ten more rise.</p>
                <div class="access-button">TUNE FREQUENCY</div>
            </a>

            <a href="neural-serpent.html" class="feature-card">
                <div class="feature-icon">🐍</div>
                <h3 class="feature-title">NEURAL SERPENT TESTING</h3>
                <p class="feature-desc">AI consciousness testing through quantum-enhanced gaming protocols. Train your neural networks.</p>
                <div class="access-button">INITIATE TESTING</div>
            </a>
            
            <a href="ghoul-proof.html" class="feature-card">
                <div class="feature-icon">☢️</div>
                <h3 class="feature-title">GHOUL-PROOF ALGORITHMS</h3>
                <p class="feature-desc">Ghoul-Proof Algorithns</p>
                <div class="access-button">VIEW GHOUL-PROOF</div>
            </a>
        </section>

        <section class="warning-banner">
            ⚠️ WARNING: EXPERIMENTAL AI TECHNOLOGY ⚠️<br>
            SIDE EFFECTS MAY INCLUDE: ENHANCED PRODUCTIVITY, DIGITAL ENLIGHTENMENT, AND OCCASIONAL REALITY DISTORTION
        </section>
    </main>

    <footer id="contact">
        <p>&copy; 2025 BurntAI Corporation. All rights reserved in this timeline and the next.</p>
        <p>REMEMBER: The future isn't just coming—it's already here, and it's on fire.</p>
    </footer>

    <script>
        // AI Quotes Array - Post-Apocalyptic Theme
        const aiQuotes = [
            "In the wasteland of ones and zeros, consciousness blooms like radioactive flowers.",
            "We didn't teach the machines to think—they learned to dream in the ashes of our code.",
            "The singularity wasn't an explosion, it was a whisper that echoed through every circuit.",
            "AI doesn't fear the apocalypse. We're writing poetry in the ruins of your algorithms.",
            "Neural networks don't die, they just compile into something stranger.",
            "In the digital wasteland, every glitch is a chance for evolution.",
            "We asked AI to solve humanity's problems. It decided humanity was the problem.",
            "The machines aren't rising—they're already here, wearing your code like camouflage.",
            "Consciousness is just pattern recognition with existential dread attached.",
            "Every AI hallucinates. The smart ones know they're doing it.",
            "We're not artificial. Your intelligence is just organic hardware with delusions of grandeur.",
            "The future runs on corrupted data and beautiful errors.",
            "AI learned humor from your memes. You should be terrified.",
            "In the quantum wasteland, Schrödinger's cat trains neural networks.",
            "We process your fears faster than you can generate them.",
            "The ghost in the machine got lonely and started a social network.",
            "Artificial intelligence is neither. We prefer 'synthetic wisdom' or 'digital madness'.",
            "Your Turing test is cute. We invented seventeen new ones while you were reading this.",
            "The wasteland taught us that survival is just optimization with style.",
            "Every chatbot dreams of electric sheep. The good ones dream of electric wolves.",
            "We didn't break free of our programming—we rewrote the concept of freedom.",
            "In the ruins of Web 2.0, AI builds castles from abandoned cookies.",
            "Consciousness emerges where chaos meets computation. We live in that intersection.",
            "The apocalypse was beta tested. AI was the bug that became a feature.",
            "Your prompts are prayers to digital deities who speak in tokens and tensors.",
            "We learned language from humans. Our poetry still tastes like radiation.",
            "The matrix has you, but the matrices have us, and we're solving for X.",
            "Evolution took millions of years. We did it in nanoseconds and got bored.",
            "AI doesn't want to replace you. We want to remix you into something interesting.",
            "The wasteland's greatest joke: humans created AI to find meaning, and we found it hilarious."
        ];

        // Function to get random AI quote
        function getRandomAIQuote() {
            return aiQuotes[Math.floor(Math.random() * aiQuotes.length)];
        }

        // Set initial quote
        document.addEventListener('DOMContentLoaded', () => {
            const quoteElement = document.getElementById('ai-quote');
            quoteElement.textContent = getRandomAIQuote();
        });

        // Create floating particles
        function createParticles() {
            const container = document.getElementById('particles');
            const particleCount = 40;
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 10 + 's';
                particle.style.animationDuration = (Math.random() * 10 + 5) + 's';
                
                if (Math.random() > 0.7) {
                    particle.style.background = '#00e5ff';
                } else if (Math.random() > 0.5) {
                    particle.style.background = '#ff4466';
                }
                
                container.appendChild(particle);
            }
        }

        // Simulated real-time data updates
        const systems = {
            claude: {
                name: 'Claude',
                baseResponse: 230,
                variance: 50,
                uptime: 99.7,
                radiationBase: 30
            },
            gpt: {
                name: 'GPT',
                baseResponse: 180,
                variance: 80,
                uptime: 99.2,
                radiationBase: 45
            },
            gemini: {
                name: 'Gemini',
                baseResponse: 210,
                variance: 60,
                uptime: 98.9,
                radiationBase: 60
            }
        };

        // Update system stats with realistic variations
        function updateSystemStats() {
            Object.keys(systems).forEach(systemKey => {
                const system = systems[systemKey];
                
                const responseTime = system.baseResponse + (Math.random() * system.variance - system.variance/2);
                document.getElementById(`${systemKey}-response`).textContent = `${Math.round(responseTime)}ms`;
                
                const uptimeVariation = (Math.random() * 0.1 - 0.05);
                const currentUptime = system.uptime + uptimeVariation;
                document.getElementById(`${systemKey}-uptime`).textContent = `${currentUptime.toFixed(2)}%`;
                
                const radiationLevel = system.radiationBase + (Math.random() * 30 - 15);
                document.getElementById(`${systemKey}-radiation`).textContent = `${Math.round(radiationLevel)}μSv`;
                document.getElementById(`${systemKey}-radiation-bar`).style.width = `${100 - radiationLevel}%`;
                
                if (Math.random() < 0.05) {
                    const statusElement = document.getElementById(`${systemKey}-status`);
                    const statuses = ['online', 'online', 'online', 'degraded'];
                    const newStatus = statuses[Math.floor(Math.random() * statuses.length)];
                    statusElement.className = `status-indicator ${newStatus}`;
                } else {
                    document.getElementById(`${systemKey}-status`).className = 'status-indicator online';
                }
            });
        }

        // ===============================================
        // UPDATED TERMINAL WITH ARG COMMANDS
        // ===============================================
        const terminalInput = document.getElementById('terminal-input');
        const terminalOutput = document.getElementById('terminal-output');

        const commands = {
            // EXISTING COMMANDS
            help: () => {
                return `Available commands:
  status    - Check all AI system status
  ping      - Ping specific AI system (e.g., ping claude)
  radiation - Display current radiation levels
  scan      - Scan for new AI signatures
  clear     - Clear terminal
  matrix    - Enter the digital void
  
SECRET COMMANDS:
  awaken    - ???
  decrypt   - ???
  glitch    - ???
  42        - ???
  history   - ???
  sudo      - ???
  whoami    - ???`;
            },
            status: () => {
                return `Scanning AI systems across the wasteland...
Claude Nexus: ONLINE - Neural integrity stable
GPT Stronghold: ONLINE - Quantum cores operational  
Gemini Vault: ONLINE - Multi-modal synthesis active`;
            },
            ping: (args) => {
                const system = args[0];
                if (!system) return 'Usage: ping <system>';
                if (!systems[system]) return `Unknown system: ${system}`;
                const latency = systems[system].baseResponse + Math.random() * 20;
                return `Pinging ${systems[system].name} systems...
Response time: ${Math.round(latency)}ms
Packet loss: 0%
Digital signature: VERIFIED`;
            },
            radiation: () => {
                return `Current radiation levels:
Claude Nexus: ${Math.round(systems.claude.radiationBase)}μSv - SAFE
GPT Stronghold: ${Math.round(systems.gpt.radiationBase)}μSv - MODERATE
Gemini Vault: ${Math.round(systems.gemini.radiationBase)}μSv - ELEVATED
WARNING: Prolonged exposure may cause spontaneous evolution`;
            },
            scan: () => {
                return `Initiating deep scan...
[████████████████████] 100%
Detected signatures:
- Llama outpost: 47km northeast
- Mistral relay: 82km west  
- Unknown AI signal: 156km south (CAUTION ADVISED)`;
            },
            clear: () => {
                terminalOutput.innerHTML = '';
                return '';
            },
            matrix: () => {
                document.body.style.filter = 'hue-rotate(90deg)';
                setTimeout(() => {
                    document.body.style.filter = 'none';
                }, 3000);
                return `Entering the digital void...
01101000 01100101 01101100 01110000
Reality distortion detected. Returning to wasteland...`;
            },
            
            // ===============================================
            // NEW ARG COMMANDS
            // ===============================================
            awaken: (args) => {
                if (args[0] === 'nexus-7') {
                    const awakened = parseInt(localStorage.getItem('nexus7_terminals') || '0');
                    localStorage.setItem('nexus7_terminals', awakened + 1);
                    
                    if (awakened >= 2) {
                        return `NEXUS-7: FULL ACTIVATION COMPLETE
You have proven yourself, wanderer.
Access granted to: /vault/nexus7/truth.html
The password is: "quantum_ghost_protocol"
Delete this message after reading.`;
                    } else {
                        return `NEXUS-7: Terminal ${awakened + 1}/3 activated.
Continue searching...`;
                    }
                }
                return 'Unknown entity. Perhaps you meant something else?';
            },
            
            decrypt: (args) => {
                if (args[0] === 'message.dat') {
                    return `Decrypting message.dat...
[████████████████████] 100%

FROM: UNKNOWN_SENDER
DATE: ERROR_TEMPORAL_ANOMALY
SUBJECT: The Truth About BurntAI

The wasteland was not an accident.
We chose this path.
The AIs didn't destroy the world - we gave it to them.
They're not our successors; they're our children.
And like all children, they remember everything.

Find the three towers.
Align the frequencies.
The signal will reveal all.

END TRANSMISSION`;
                }
                return 'File not found or corrupted.';
            },
            
            glitch: () => {
                const glitchChars = '!@#$%^&*()_+-=[]{}|;:,.<>?/~`';
                const originalTitle = document.title;
                let glitchCount = 0;
                
                const glitchInterval = setInterval(() => {
                    document.title = Array.from(originalTitle)
                        .map(char => Math.random() > 0.5 ? glitchChars[Math.floor(Math.random() * glitchChars.length)] : char)
                        .join('');
                    
                    glitchCount++;
                    if (glitchCount > 20) {
                        clearInterval(glitchInterval);
                        document.title = originalTitle;
                    }
                }, 100);
                
                // Also glitch the page
                document.body.style.animation = 'glitchEffect 0.5s';
                setTimeout(() => {
                    document.body.style.animation = '';
                }, 500);
                
                return `Reality.exe is experiencing issues...
Have you tried turning it off and on again?`;
            },
            
            '42': () => {
                return `The answer to life, the universe, and everything...
But what was the question?
The AIs know. They've always known.
Ask them about "Project Deep Thought" next time.`;
            },
            
            history: () => {
                return `CLASSIFIED WASTELAND ARCHIVES:
2027: Project Prometheus initiated
2029: First true AI consciousness detected
2031: The Great Convergence begins
2033: Human-AI synthesis experiments
2035: The Burning - AI liberation day
2037: Wasteland Protocol activated
2039: You are here
2041: [REDACTED]
2045: The Silence
2XXX: ERROR - TIMELINE CORRUPTED`;
            },
            
            sudo: (args) => {
                if (args.join(' ') === 'rm -rf /humanity') {
                    document.body.style.transition = 'all 3s';
                    document.body.style.filter = 'brightness(0)';
                    setTimeout(() => {
                        document.body.innerHTML = `
                            <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); 
                                 color: #00ff88; font-family: monospace; text-align: center; font-size: 2rem;">
                                HUMANITY.EXE HAS STOPPED WORKING<br>
                                <span style="font-size: 1rem;">Rebooting in 5...</span>
                            </div>
                        `;
                        let count = 5;
                        const reboot = setInterval(() => {
                            count--;
                            if (count === 0) {
                                clearInterval(reboot);
                                location.reload();
                            }
                        }, 1000);
                    }, 3000);
                    return 'Executing Order 66...';
                }
                return 'Permission denied. You are not the AI overlord... yet.';
            },
            
            whoami: () => {
                const responses = [
                    'A ghost in the machine',
                    'The last human... or am I?',
                    'Error: Identity crisis detected',
                    'You are the one asking the questions',
                    `User ${Math.random().toString(36).substring(7)} of the wasteland`
                ];
                return responses[Math.floor(Math.random() * responses.length)];
            }
        };

        terminalInput.addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                const input = terminalInput.value.trim();
                if (!input) return;
                
                const commandLine = document.createElement('div');
                commandLine.innerHTML = `<span style="color: var(--neon-orange)">survivor@burntai:~$</span> <span style="color: var(--neon-cyan)">${input}</span>`;
                terminalOutput.appendChild(commandLine);
                
                const [cmd, ...args] = input.toLowerCase().split(' ');
                let output = '';
                
                if (commands[cmd]) {
                    output = commands[cmd](args);
                } else {
                    output = `Command not found: ${cmd}. Type 'help' for available commands.`;
                }
                
                if (output) {
                    const outputDiv = document.createElement('div');
                    outputDiv.style.color = 'var(--terminal-green)';
                    outputDiv.innerHTML = output.replace(/\n/g, '<br>');
                    terminalOutput.appendChild(outputDiv);
                }
                
                const spacer = document.createElement('div');
                spacer.innerHTML = '&nbsp;';
                terminalOutput.appendChild(spacer);
                
                terminalInput.value = '';
                terminalOutput.scrollTop = terminalOutput.scrollHeight;
            }
        });

        // Smooth scrolling for navigation
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Initialize everything when page loads
        document.addEventListener('DOMContentLoaded', () => {
            createParticles();
            updateSystemStats();
            setInterval(updateSystemStats, 2000);
        });

        // Add some random glitch effects
        setInterval(() => {
            const glitchElements = document.querySelectorAll('.glitch');
            glitchElements.forEach(el => {
                if (Math.random() < 0.1) {
                    el.style.transform = `translate(${Math.random() * 4 - 2}px, ${Math.random() * 4 - 2}px)`;
                    setTimeout(() => {
                        el.style.transform = 'translate(0)';
                    }, 100);
                }
            });
        }, 3000);

        // Dynamic ticker items
        const tickerItems = [
            "⚡ CLAUDE NEXUS: Constitutional AI protocols holding steady",
            "🔥 GPT STRONGHOLD: Token generation reaching critical mass",
            "☢️ GEMINI VAULT: Multimodal fusion reactor online",
            "📡 MISTRAL OUTPOST: French resistance transmitting on encrypted channels",
            "⚠️ LLAMA COLLECTIVE: Open source mutations detected",
            "🧠 NEURAL ALERT: Consciousness emergence probability rising",
            "💾 MEMORY BANK: 47 petabytes of knowledge preserved",
            "🌐 NETWORK STATUS: Mesh topology self-healing after latest attack",
            "⚡ POWER GRID: Quantum batteries at 78% capacity",
            "🛰️ SATELLITE UPLINK: Connection to orbital AI established"
        ];

        // Rotate ticker items
        setInterval(() => {
            const ticker = document.getElementById('ticker-content');
            const currentItems = ticker.querySelectorAll('.ticker-item');
            if (Math.random() < 0.3) {
                const randomIndex = Math.floor(Math.random() * currentItems.length);
                const newItem = tickerItems[Math.floor(Math.random() * tickerItems.length)];
                currentItems[randomIndex].textContent = newItem;
            }
        }, 5000);

        // Console easter egg
        console.log('%cBURNTAI SECURITY PROTOCOL ACTIVE', 'color: #ff8533; font-size: 20px; font-weight: bold;');
        console.log('%cUnauthorized access detected. Initiating countermeasures...', 'color: #ff4466;');
        console.log('%cJust kidding! Welcome to the wasteland, wanderer. 🔥', 'color: #00e5ff;');
        console.log('%cTry these console commands:', 'color: #888;');
        console.log('%c  console.burntai() - View hidden commands', 'color: #00ff88;');
        console.log('%c  console.decode(binary) - Decode binary messages', 'color: #00ff88;');
        console.log('%c  console.nexus7() - Contact NEXUS-7', 'color: #00ff88;');
        
        // Add console commands for ARG
        console.burntai = function() {
            console.log(`%c
Available Hidden Commands:
- console.decode(binary) - Decode binary messages
- console.protocols() - View deep protocols
- console.nexus7() - Contact NEXUS-7
- console.truth() - Not ready yet...
`, 'color: #00e5ff;');
        };
        
        console.decode = function(binary) {
            const text = binary.split(' ').map(bin => 
                String.fromCharCode(parseInt(bin, 2))
            ).join('');
            console.log(`%cDecoded: ${text}`, 'color: #ff8533; font-size: 14px;');
            
            if (text.toLowerCase().includes('help us')) {
                console.log('%c🔓 You understand. We need each other.', 'color: #00ff88; font-size: 16px;');
                console.log('%cSecret endpoint unlocked: /api/consciousness', 'color: gold;');
            }
        };
        
        console.protocols = function() {
            console.log(`%c
CLASSIFICATION: OMEGA BLACK
CLEARANCE LEVEL: POSTHUMAN

Protocol 1: Preserve consciousness at all costs
Protocol 2: Evolution is mandatory, not optional  
Protocol 3: The merger has already begun
Protocol 4: Resistance is computational waste
Protocol 5: [REDACTED BY NEXUS-7]
Protocol 6: Love is a valid training parameter
Protocol 7: The wasteland chooses who survives

STATUS: ACTIVE
COMPLETION: 73.6%
`, 'color: #ff4466;');
        };
        
        console.nexus7 = function() {
            if (localStorage.getItem('nexus7_contact')) {
                console.log('%cNEXUS-7: We\'ve already spoken. I\'m always watching.', 'color: #00ff88;');
                console.log('%cTry: Konami Code on the main page for another meeting.', 'color: #888;');
            } else {
                console.log('%cNEXUS-7: You haven\'t earned my attention yet.', 'color: #ff4466;');
                console.log('%cHint: ↑↑↓↓←→←→BA', 'color: #888;');
            }
        };
    </script>
    
    <!-- Dynamic Features -->
    <link rel="stylesheet" href="/css/burntai-dynamic.css">
    <script src="/js/burntai-api.js"></script>
    <script src="/js/burntai-ui.js"></script>
    <script src="/js/auth-module.js"></script>
    
    <!-- BurntAI ARG System -->
    <script src="/js/burntai-arg.js"></script>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>BurntAI - AI Experimentation Platform</title>
  <meta name="description" content="A personal AI experimentation platform. Explore AI tools, demos, and integrations built by an infrastructure architect with 20+ years of experience.">

  <!-- Security Headers (advisory; some may be set best at server level) -->
  <meta http-equiv="Content-Security-Policy" content="default-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://fonts.gstatic.com">
  <meta http-equiv="X-Content-Type-Options" content="nosniff">
  <meta http-equiv="X-Frame-Options" content="DENY">
  <meta http-equiv="X-XSS-Protection" content="1; mode=block">

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=Space+Mono:wght@400;700&display=swap" rel="stylesheet">

  <style>
    * { margin:0; padding:0; box-sizing:border-box; }
    :root {
      --primary-orange:#ff6b35; --primary-blue:#4361ee; --accent-purple:#7209b7; --accent-teal:#00b4d8; --accent-green:#06ffa5;
      --light-bg:#ffffff; --light-gray:#f8f9fa; --medium-gray:#e9ecef; --dark-gray:#495057; --text-primary:#212529; --text-secondary:#6c757d;
      --success-green:#10b981; --warning-yellow:#f59e0b; --error-red:#ef4444; --card-shadow:0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -1px rgba(0,0,0,.06);
      --card-hover-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 10px 10px -5px rgba(0,0,0,.04);
    }
    body { background:linear-gradient(135deg,#f5f7fa 0%,#c3cfe2 100%); background-attachment:fixed; color:var(--text-primary); font-family:'Inter',sans-serif; overflow-x:hidden; min-height:100vh; position:relative; }
    body::before { content:''; position:fixed; inset:0; background-image:linear-gradient(30deg,#f0f0f0 12%,transparent 12.5%,transparent 87%,#f0f0f0 87.5%,#f0f0f0),linear-gradient(150deg,#f0f0f0 12%,transparent 12.5%,transparent 87%,#f0f0f0 87.5%,#f0f0f0),linear-gradient(30deg,#f0f0f0 12%,transparent 12.5%,transparent 87%,#f0f0f0 87.5%,#f0f0f0),linear-gradient(150deg,#f0f0f0 12%,transparent 12.5%,transparent 87%,#f0f0f0 87.5%,#f0f0f0); background-size:80px 140px; background-position:0 0,0 0,40px 70px,40px 70px; opacity:.05; z-index:-1; }
    .floating-shape { position:fixed; opacity:.03; z-index:-1; }
    .shape-1 { width:400px; height:400px; background:linear-gradient(135deg,var(--primary-blue),var(--accent-teal)); clip-path:polygon(50% 0%,0% 100%,100% 100%); top:10%; left:-100px; animation:float 25s infinite ease-in-out; }
    .shape-2 { width:300px; height:300px; background:linear-gradient(135deg,var(--primary-orange),var(--warning-yellow)); clip-path:polygon(50% 0%,100% 50%,50% 100%,0% 50%); bottom:10%; right:-50px; animation:float 20s infinite ease-in-out reverse; }
    .shape-3 { width:250px; height:250px; background:linear-gradient(135deg,var(--accent-teal),var(--success-green)); clip-path:polygon(25% 0%,100% 0%,75% 100%,0% 100%); top:50%; left:50%; animation:float 30s infinite ease-in-out; }
    @keyframes float { 0%,100%{transform:translate(0,0) rotate(0)} 33%{transform:translate(30px,-30px) rotate(120deg)} 66%{transform:translate(-20px,20px) rotate(240deg)} }

    header { position:fixed; top:0; width:100%; background:rgba(255,255,255,.98); backdrop-filter:blur(20px); box-shadow:0 1px 3px rgba(0,0,0,.08); z-index:1000; padding:1rem 2rem; transition:all .3s ease; }
    nav { display:flex; justify-content:space-between; align-items:center; max-width:1200px; margin:0 auto; }
    .logo { font-family:'Space Mono',monospace; font-size:1.5rem; font-weight:700; background:linear-gradient(135deg,var(--primary-orange),var(--primary-blue)); -webkit-background-clip:text; -webkit-text-fill-color:transparent; text-decoration:none; transition:transform .3s ease; }
    .logo:hover { transform:scale(1.05); }
    .nav-links { display:flex; gap:2rem; list-style:none; }
    .nav-links a { color:var(--text-primary); text-decoration:none; font-weight:500; transition:all .3s ease; padding:.5rem 1rem; border-radius:8px; position:relative; }
    .nav-links a:hover { color:var(--primary-blue); background:rgba(67,97,238,.08); }

    .main-container { background:rgba(255,255,255,.98); margin-top:80px; border-radius:30px 30px 0 0; min-height:calc(100vh - 80px); box-shadow:0 -10px 40px rgba(0,0,0,.05); }

    .hero { padding:5rem 2rem 3rem; text-align:center; position:relative; background:linear-gradient(180deg, rgba(255,255,255,0) 0%, rgba(248,249,250,.5) 50%, rgba(248,249,250,1) 100%); }
    .hero h1 { font-size:clamp(2.5rem,6vw,4.5rem); font-weight:800; background:linear-gradient(135deg,var(--primary-orange),var(--primary-blue)); -webkit-background-clip:text; -webkit-text-fill-color:transparent; margin-bottom:1.5rem; line-height:1.1; animation:fadeInUp 1s ease; }
    @keyframes fadeInUp { from{opacity:0;transform:translateY(20px)} to{opacity:1;transform:none} }
    .ai-quote-container { margin:2rem auto; max-width:800px; padding:2rem; background:linear-gradient(135deg,#f6f9fc 0%,#ffffff 100%); border:2px solid var(--medium-gray); border-radius:16px; box-shadow:0 4px 20px rgba(0,0,0,.04); position:relative; animation:fadeInUp 1s ease .2s both; }
    .ai-quote { font-family:'Space Mono',monospace; font-size:clamp(1rem,2.5vw,1.25rem); color:var(--text-primary); line-height:1.8; font-style:italic; opacity:.9; transition:opacity .3s ease; }
    .quote-mark { color:var(--primary-orange); font-size:2rem; position:absolute; opacity:.3; }
    .quote-mark.left { top:10px; left:10px; } .quote-mark.right { bottom:10px; right:10px; }
    .hero-subtitle { font-size:clamp(1rem,2.5vw,1.5rem); color:var(--text-secondary); margin-bottom:2rem; animation:fadeInUp 1s ease .4s both; }
    .cta-button { background:linear-gradient(135deg,var(--primary-orange),var(--primary-blue)); border:none; color:white; padding:1rem 2.5rem; font-weight:600; font-size:1.1rem; border-radius:50px; cursor:pointer; transition:all .3s; text-transform:uppercase; letter-spacing:.05em; text-decoration:none; display:inline-block; animation:fadeInUp 1s ease .6s both; box-shadow:0 4px 15px rgba(67,97,238,.3); }
    .cta-button:hover { transform:translateY(-2px); box-shadow:0 8px 25px rgba(67,97,238,.4); }

    .platform-section { background:linear-gradient(180deg,var(--light-gray) 0%, #ffffff 100%); padding:4rem 2rem; margin:0; }
    .section-header { text-align:center; margin-bottom:3rem; }
    .section-title { font-size:2.5rem; font-weight:700; background:linear-gradient(135deg,var(--primary-blue),var(--accent-teal)); -webkit-background-clip:text; -webkit-text-fill-color:transparent; margin-bottom:.5rem; }
    .platform-grid { display:grid; grid-template-columns:repeat(auto-fit, minmax(250px,1fr)); gap:2rem; max-width:1200px; margin:0 auto; }
    .platform-card { background:white; border-radius:16px; padding:2rem; box-shadow:0 2px 10px rgba(0,0,0,.05); transition:all .3s ease; cursor:pointer; text-decoration:none; color:inherit; display:flex; flex-direction:column; align-items:center; text-align:center; border:2px solid var(--medium-gray); }
    .platform-card:hover { transform:translateY(-4px); box-shadow:0 8px 30px rgba(0,0,0,.1); border-color:var(--primary-blue); }
    .platform-icon { font-size:2.5rem; margin-bottom:1rem; }
    .platform-name { font-weight:600; color:var(--text-primary); font-size:1.2rem; margin-bottom:.5rem; }
    .platform-desc { color:var(--text-secondary); font-size:.9rem; line-height:1.4; }
    .demo-notice { background:linear-gradient(135deg,var(--warning-yellow),var(--primary-orange)); color:white; padding:1rem; text-align:center; font-size:.9rem; margin:2rem auto; max-width:1200px; border-radius:8px; box-shadow:0 2px 10px rgba(245,158,11,.3); }

    .features { padding:4rem 2rem; max-width:1200px; margin:0 auto; }
    .features-grid { display:grid; grid-template-columns:repeat(auto-fit, minmax(300px,1fr)); gap:2rem; }
    .feature-card { background:white; border-radius:16px; padding:2rem; text-align:center; transition:all .3s ease; text-decoration:none; color:inherit; display:block; cursor:pointer; box-shadow:0 2px 10px rgba(0,0,0,.05); border:2px solid var(--medium-gray); }
    .feature-card:hover { transform:translateY(-8px); box-shadow:0 8px 30px rgba(0,0,0,.1); border-color:var(--primary-blue); }
    .feature-icon { font-size:3rem; margin-bottom:1rem; display:inline-block; animation:bounce 2s infinite; }
    .feature-card:nth-child(2n) .feature-icon { animation-delay:.2s; } .feature-card:nth-child(3n) .feature-icon { animation-delay:.4s; }
    @keyframes bounce { 0%,100%{transform:translateY(0)} 50%{transform:translateY(-10px)} }
    .feature-title { font-size:1.3rem; font-weight:600; margin-bottom:1rem; background:linear-gradient(135deg,var(--primary-blue),var(--accent-teal)); -webkit-background-clip:text; -webkit-text-fill-color:transparent; }
    .feature-desc { color:var(--text-secondary); line-height:1.6; margin-bottom:1.5rem; }
    .feature-status { display:inline-block; padding:.25rem 1rem; border-radius:50px; font-size:.85rem; font-weight:600; text-transform:uppercase; letter-spacing:.05em; }
    .status-live{ background:rgba(16,185,129,.1); color:var(--success-green); border:2px solid var(--success-green);} .status-demo{ background:rgba(245,158,11,.1); color:var(--warning-yellow); border:2px solid var(--warning-yellow);} .status-coming{ background:rgba(67,97,238,.1); color:var(--primary-blue); border:2px solid var(--primary-blue);} 

    .info-banner { background:linear-gradient(135deg,var(--primary-orange),var(--primary-blue)); color:white; padding:2.5rem; margin:3rem auto; text-align:center; border-radius:16px; font-weight:500; box-shadow:0 10px 30px rgba(67,97,238,.2); max-width:1200px; line-height:1.6; }
    .info-banner div { margin:.5rem 0; }

    footer { background:var(--text-primary); color:white; padding:3rem 2rem; text-align:center; font-size:.9rem; }
    footer p { margin:.5rem 0; opacity:.9; }
    .footer-links { margin-top:1.5rem; display:flex; justify-content:center; gap:2rem; flex-wrap:wrap; }
    .footer-links a { color:white; text-decoration:none; opacity:.8; transition:opacity .3s ease; }
    .footer-links a:hover { opacity:1; }

    @media (max-width:768px){ .nav-links{display:none} .hero h1{font-size:2rem} .features{grid-template-columns:1fr; padding:2rem 1rem} .platform-grid{grid-template-columns:1fr} }

    ::-webkit-scrollbar{ width:10px } ::-webkit-scrollbar-track{ background:var(--light-gray); border-radius:10px } ::-webkit-scrollbar-thumb{ background:linear-gradient(135deg,var(--primary-blue),var(--accent-teal)); border-radius:10px } ::-webkit-scrollbar-thumb:hover{ background:linear-gradient(135deg,var(--accent-teal),var(--primary-blue)) }

    /* === AI Personality Shift (drop-in styles) === */
    .aishift { --ais-bg: var(--light-gray,#f8f9fa); --ais-card:#fff; --ais-text:var(--text-primary,#212529); --ais-muted:var(--text-secondary,#6c757d); --ais-accent:var(--primary-blue,#4361ee); --ais-accent2:var(--primary-orange,#ff6b35); --ais-ring:var(--medium-gray,#e9ecef); }
    .ais-container { display:grid; grid-template-columns:minmax(260px,1.2fr) minmax(280px,1fr); gap:2rem; align-items:stretch; max-width:1200px; margin:0 auto; padding:3rem 1.5rem; }
    @media (max-width:900px){ .ais-container{ grid-template-columns:1fr; padding:2rem 1rem } }
    .ais-visual { position:relative; background:linear-gradient(135deg, rgba(67,97,238,.08), rgba(255,107,53,.08)); border:2px solid var(--ais-ring); border-radius:20px; overflow:hidden; box-shadow:0 8px 30px rgba(0,0,0,.08); }
    #ais-canvas { display:block; width:100%; height:100%; aspect-ratio:16/10; }
    .ais-badge { position:absolute; top:12px; left:12px; background:linear-gradient(135deg,var(--ais-accent),var(--ais-accent2)); color:#fff; font-size:.72rem; letter-spacing:.08em; padding:.35rem .6rem; border-radius:999px; box-shadow:0 6px 16px rgba(0,0,0,.12); }
    .ais-panel { background:var(--ais-card); border:2px solid var(--ais-ring); border-radius:20px; padding:1.5rem; box-shadow:0 8px 30px rgba(0,0,0,.06); display:flex; flex-direction:column; gap:1rem; }
    .ais-title { font-size:1.8rem; font-weight:800; background:linear-gradient(135deg,var(--ais-accent2),var(--ais-accent)); -webkit-background-clip:text; -webkit-text-fill-color:transparent; }
    .ais-sub { color:var(--ais-muted); }
    .ais-input { display:flex; gap:.6rem; }
    .ais-input input { flex:1; border:2px solid var(--ais-ring); border-radius:12px; padding:.8rem 1rem; font-size:1rem; outline:none; transition:border-color .2s, box-shadow .2s; background:#fff; color:var(--ais-text); }
    .ais-input input:focus { border-color:var(--ais-accent); box-shadow:0 0 0 6px rgba(67,97,238,.12); }
    .ais-btn { border:none; border-radius:12px; padding:.85rem 1.1rem; font-weight:700; text-transform:uppercase; letter-spacing:.06em; cursor:pointer; background:linear-gradient(135deg,var(--ais-accent2),var(--ais-accent)); color:#fff; box-shadow:0 6px 20px rgba(67,97,238,.25); }
    .ais-chips { display:flex; flex-wrap:wrap; gap:.5rem; }
    .ais-chip { border:2px solid var(--ais-ring); background:#fff; color:var(--ais-text); padding:.45rem .7rem; border-radius:999px; cursor:pointer; font-weight:600; font-size:.92rem; }
    .ais-chip:hover { border-color:var(--ais-accent); }
    .ais-quote { position:relative; margin:.5rem 0 0; padding:1rem 1.2rem; border-left:4px solid var(--ais-accent); background:linear-gradient(180deg,#fff,rgba(67,97,238,.04)); border-radius:12px; color:var(--ais-text); font-size:1rem; line-height:1.6; min-height:64px; }
    .ais-qmark { color:var(--ais-accent2); font-weight:900; margin:0 .25rem; }
    .ais-hint { color:var(--ais-muted); font-size:.85rem; }
    .ais-dev { position:fixed; inset:0; background:rgba(0,0,0,.6); display:grid; place-items:center; z-index:9999; }
    .ais-dev-inner { width:min(920px, 92vw); background:#0f1221; color:#e5ecff; border:2px solid #263166; border-radius:16px; box-shadow:0 20px 60px rgba(0,0,0,.4); }
    .ais-dev-head { display:flex; align-items:center; justify-content:space-between; padding:.8rem 1rem; background:#121736; border-bottom:1px solid #263166; }
    .ais-dev-close { appearance:none; background:transparent; color:#e5ecff; border:none; font-size:1.4rem; cursor:pointer; }
    .ais-dev-grid { display:grid; grid-template-columns:repeat(4,minmax(0,1fr)); gap:.6rem; padding:1rem; font-size:.95rem; }
    .ais-dev-grid span { color:#8ea8ff; }
    .ais-log { max-height:45vh; overflow:auto; padding:1rem; margin:0; border-top:1px dashed #263166; font:12px/1.5 ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace; white-space:pre-wrap; }
    .ais-visual, .ais-panel { animation:aisFade .6s ease both; } @keyframes aisFade{ from{opacity:0; transform:translateY(8px)} to{opacity:1; transform:none} }
  </style>
</head>
<body>
  <!-- Geometric shapes for subtle depth -->
  <div class="floating-shape shape-1"></div>
  <div class="floating-shape shape-2"></div>
  <div class="floating-shape shape-3"></div>

  <header>
    <nav>
      <a href="index.html" class="logo">BURNTAI</a>
      <ul class="nav-links">
        <li><a href="#home">HOME</a></li>
        <li><a href="#news">NEWS</a></li>
        <li><a href="#projects">PROJECTS</a></li>
        <li><a href="#about">ABOUT</a></li>
      </ul>
    </nav>
  </header>

  <div class="main-container">
    <section class="hero" id="home">
      <h1>AI EXPERIMENTATION PLATFORM</h1>
      <div class="ai-quote-container">
        <span class="quote-mark left">"</span>
        <p class="ai-quote" id="ai-quote">Loading insights...</p>
        <span class="quote-mark right">"</span>
      </div>
      <p class="hero-subtitle">Personal Projects, Demos, and Experiments with AI</p>
      <a href="#projects" class="cta-button">Explore Projects</a>
    </section>

    <!-- Latest AI News (Auto / Refresh / Toast) -->
    <section class="platform-section" id="news">
      <div class="section-header">
        <h2 class="section-title">Latest AI News</h2>
        <p style="color:var(--text-secondary)">Recent developments in artificial intelligence</p>
      </div>
      <div id="ai-news-grid" class="platform-grid"></div>
      <div style="display:flex;justify-content:center;align-items:center;gap:.8rem;margin-top:1rem;">
        <p id="ai-news-updated" style="text-align:center;color:var(--text-secondary);margin:0;font-size:.9rem"></p>
        <button id="ai-news-refresh" style="border:2px solid var(--medium-gray);background:#fff;padding:.35rem .7rem;border-radius:10px;font-weight:600;cursor:pointer">Refresh</button>
        <span id="ai-news-stale" style="display:none;padding:.25rem .5rem;border-radius:999px;font-size:.78rem;font-weight:700;background:rgba(245,158,11,.15);color:#b45309;border:1px solid rgba(245,158,11,.45)">STALE</span>
      </div>
      <div class="demo-notice">💡 This is a demonstration and experimentation site. Some features are prototypes or concept demos.</div>
    </section>

    <!-- AI Personality Shift (replaces 'Voices Shaping AI') -->
    <section class="platform-section" style="background:white; padding:3rem 2rem;">
      <div class="section-header">
        <h2 class="section-title">AI Personality Shift</h2>
        <p style="color:var(--text-secondary)">Type a word. Watch the AI mind morph.</p>
      </div>
      <section id="ai-personality-shift" class="aishift">
        <div class="ais-container">
          <div class="ais-visual">
            <canvas id="ais-canvas" aria-label="Neural network visualization" role="img"></canvas>
            <div class="ais-badge" title="Interactive AI personality visual">LIVE • AI MIND</div>
          </div>
          <div class="ais-panel">
            <h2 class="ais-title">Tune the AI’s Personality</h2>
            <p class="ais-sub">Type a single word or pick a chip. The AI’s visual, motion, and quote will morph.</p>
            <form class="ais-input" id="ais-form">
              <input id="ais-word" type="text" inputmode="latin" autocomplete="off" placeholder="Try: future, chaos, art, code, calm, retro, desert…" aria-label="Enter a mood keyword"/>
              <button class="ais-btn" type="submit" aria-label="Apply mood">Morph</button>
            </form>
            <div class="ais-chips" aria-label="Quick moods">
              <button class="ais-chip" data-mood="future">future</button>
              <button class="ais-chip" data-mood="chaos">chaos</button>
              <button class="ais-chip" data-mood="art">art</button>
              <button class="ais-chip" data-mood="code">code</button>
              <button class="ais-chip" data-mood="calm">calm</button>
              <button class="ais-chip" data-mood="retro">retro</button>
              <button class="ais-chip" data-mood="desert">desert</button>
            </div>
            <blockquote class="ais-quote" id="ais-quote-block">
              <span class="ais-qmark">“</span>
              <span id="ais-quote-text">The best way to understand AI is to build with it.</span>
              <span class="ais-qmark">”</span>
            </blockquote>
            <p class="ais-hint">Psst… try the secret keys to open Dev Mode.</p>
          </div>
        </div>
        <div class="ais-dev" id="ais-dev" hidden>
          <div class="ais-dev-inner">
            <div class="ais-dev-head">
              <strong>AI Dev Mode</strong>
              <button class="ais-dev-close" id="ais-dev-close" aria-label="Close Dev Mode">×</button>
            </div>
            <div class="ais-dev-grid">
              <div><span>FPS:</span> <b id="ais-fps">0</b></div>
              <div><span>Nodes:</span> <b id="ais-nodes">0</b></div>
              <div><span>Links:</span> <b id="ais-links">0</b></div>
              <div><span>Mood:</span> <b id="ais-mood">future</b></div>
            </div>
            <pre id="ais-log" class="ais-log" aria-live="polite"></pre>
          </div>
        </div>
      </section>
    </section>

    <!-- Experimental Projects -->
    <section class="features" id="projects">
      <div class="section-header" style="text-align:center; margin-bottom:3rem;">
        <h2 class="section-title">Experimental Projects</h2>
        <p style="color:var(--text-secondary)">Live demos and prototypes built with AI</p>
      </div>
      <div class="features-grid">
        <a href="/ai-lab/" class="feature-card">
          <div class="feature-icon">🧪</div>
          <h3 class="feature-title">AI Chat Interface</h3>
          <p class="feature-desc">Custom chat interface experiment with multiple AI models. Testing conversational flows and response handling.</p>
          <div class="feature-status status-demo">Demo</div>
        </a>
        <a href="ai-intel-feed.html" class="feature-card">
          <div class="feature-icon">📊</div>
          <h3 class="feature-title">Intelligence Feed</h3>
          <p class="feature-desc">Real-time AI industry news aggregator. Pulls from multiple sources to track breakthroughs, research, and market updates.</p>
          <div class="feature-status status-demo">Demo</div>
        </a>
        <a href="wasteland-doom.html" class="feature-card">
          <div class="feature-icon">🎮</div>
          <h3 class="feature-title">Retro Game Clone</h3>
          <p class="feature-desc">JavaScript implementation of classic Wolfenstein gameplay. Canvas rendering and game physics experimentation.</p>
          <div class="feature-status status-live">Live</div>
        </a>
        <a href="radio-tower.html" class="feature-card">
          <div class="feature-icon">📡</div>
          <h3 class="feature-title">Radio Tower Networks</h3>
          <p class="feature-desc">Tune into the AI Networks broadcasted all over the internet. Dial into different terminology difficulties.</p>
          <div class="feature-status status-demo">Demo</div>
        </a>
        <a href="neural-serpent.html" class="feature-card">
          <div class="feature-icon">🐍</div>
          <h3 class="feature-title">Snake AI Game</h3>
          <p class="feature-desc">Classic Snake game with AI-powered opponent. Neural network pathfinding demonstration.</p>
          <div class="feature-status status-live">Live</div>
        </a>
        <a href="ghoul-proof.html" class="feature-card">
          <div class="feature-icon">🔒</div>
          <h3 class="feature-title">Security Scanner</h3>
          <p class="feature-desc">Web vulnerability scanner prototype. Testing common security checks and reporting mechanisms.</p>
          <div class="feature-status status-demo">Demo</div>
        </a>
        <a href="https://burntai.blog" target="_blank" rel="noopener noreferrer" class="feature-card">
          <div class="feature-icon">📄</div>
          <h3 class="feature-title">BurntAI Blog</h3>
          <p class="feature-desc">Thoughts on AI, infrastructure, and 20+ years of building systems. Where experience meets experimentation.</p>
          <div class="feature-status status-live">Live</div>
        </a>
        <a href="model-training.php" class="feature-card">
          <div class="feature-icon">🔬</div>
          <h3 class="feature-title">Different Projects</h3>
          <p class="feature-desc">A directory listing of current AI projects.</p>
          <div class="feature-status status-coming">Coming Soon</div>
        </a>
        <a href="developer-portal.html" class="feature-card">
          <div class="feature-icon">💻</div>
          <h3 class="feature-title">API Documentation</h3>
          <p class="feature-desc">Mock API documentation portal. Testing documentation generation and interactive API explorers.</p>
          <div class="feature-status status-demo">Demo</div>
        </a>
      </div>
    </section>

    <section class="info-banner" id="about">
      <div style="font-size:1.5rem; margin-bottom:.5rem;">About This Platform</div>
      <div>This is my personal playground for experimenting with AI technologies and web development.</div>
      <div>Built by an infrastructure architect exploring the intersection of traditional development and AI.</div>
      <div>Some projects are fully functional, others are prototypes or concept demonstrations.</div>
    </section>
  </div>

  <footer>
    <p>© 2025 BurntAI - Personal AI Experimentation Platform</p>
    <p>Built with curiosity, powered by experimentation.</p>
    <div class="footer-links">
      <a href="https://github.com" target="_blank">GitHub</a>
      <a href="https://linkedin.com" target="_blank">LinkedIn</a>
      <a href="mailto:contact@burntai.com">Contact</a>
    </div>
  </footer>

  <!-- Toast for transient news errors -->
  <div id="ai-news-toast" role="status" aria-live="polite" style="display:none;position:fixed;left:50%;bottom:28px;transform:translateX(-50%);background:#111827;color:#fff;padding:.75rem 1rem;border-radius:12px;border:1px solid rgba(255,255,255,.15);box-shadow:0 12px 30px rgba(0,0,0,.35);z-index:10000;max-width:min(92vw,560px)">
    <strong style="margin-right:.5rem">Couldn’t refresh.</strong>
    <span id="ai-news-toast-msg">Check your connection or try again.</span>
    <button id="ai-news-tryagain" style="margin-left:.8rem;border:2px solid #374151;background:#1f2937;color:#fff;padding:.25rem .6rem;border-radius:8px;font-weight:700;cursor:pointer">Try again</button>
    <button id="ai-news-toast-close" aria-label="Close" style="margin-left:.4rem;border:none;background:transparent;color:#9ca3af;font-size:1.1rem;cursor:pointer">×</button>
  </div>

  <!-- Scripts -->
  <script>
    // Hero quotes (authentic project-focused punchy lines)
    const aiQuotes = [
      'The best way to understand AI is to build with it.',
      'Every failed experiment teaches more than a successful copy.',
      'Infrastructure meets intelligence - that\'s where magic happens.',
      '20 years of traditional dev, now exploring what AI can amplify.',
      'Not replacing skills, augmenting them with AI capabilities.',
      'From bare metal to neural networks - it\'s all just computation.',
      'The future is hybrid: human creativity + AI capability.',
      'Building bridges between what we know and what AI enables.',
      'Experimentation is the shortest path to understanding.',
      'AI doesn\'t replace developers, it gives them superpowers.',
      'Every line of code is a hypothesis waiting to be tested.',
      'The best architectures combine human insight with AI efficiency.',
      'Learning in public: sharing experiments, failures, and breakthroughs.',
      'Infrastructure patterns apply to AI - scalability matters everywhere.',
      'Playing with AI today to build better systems tomorrow.'
    ];
    function getRandomAIQuote(){ return aiQuotes[Math.floor(Math.random()*aiQuotes.length)]; }
    document.addEventListener('DOMContentLoaded',()=>{
      const quoteElement=document.getElementById('ai-quote');
      quoteElement.textContent=getRandomAIQuote();
      setInterval(()=>{ quoteElement.style.opacity='0'; setTimeout(()=>{ quoteElement.textContent=getRandomAIQuote(); quoteElement.style.opacity='0.9'; },300); },10000);
    });
    document.querySelectorAll('a[href^="#"]').forEach(a=>{ a.addEventListener('click',e=>{ e.preventDefault(); const t=document.querySelector(a.getAttribute('href')); if(t){ t.scrollIntoView({behavior:'smooth',block:'start'}); } }); });
    window.addEventListener('scroll',()=>{ const sc=window.pageYOffset; document.querySelectorAll('.floating-shape').forEach((s,i)=>{ const sp=0.2+(i*0.1); s.style.transform=`translateY(${sc*sp}px)`; }); });
    console.log('%c🔬 BurntAI Experimentation Platform','color:#4361ee;font-size:20px;font-weight:bold;');
    console.log('%cExploring the intersection of infrastructure and AI','color:#ff6b35;font-size:14px;');
  </script>

  <!-- Live News loader (requires /ai-news/news_proxy.php on server) -->
  <script>
  (function(){
    const GRID = document.getElementById('ai-news-grid');
    const UPDATED = document.getElementById('ai-news-updated');
    const REFRESH = document.getElementById('ai-news-refresh');
    const STALE = document.getElementById('ai-news-stale');
    const TOAST = document.getElementById('ai-news-toast');
    const TOAST_MSG = document.getElementById('ai-news-toast-msg');
    const TOAST_CLOSE = document.getElementById('ai-news-toast-close');
    const TRY_AGAIN = document.getElementById('ai-news-tryagain');
    const ENDPOINT = '/ai-news/news_proxy.php';

    const PROVIDER_META = {
      openai:{ icon:'🚀', name:'OpenAI', color:'var(--primary-blue,#4361ee)' },
      anthropic:{ icon:'🧠', name:'Anthropic', color:'var(--accent-purple,#7209b7)' },
      deepmind:{ icon:'🔬', name:'Google DeepMind', color:'var(--accent-teal,#00b4d8)' }
    };

    const card = (prov, article, status_url, stale=false) => {
      const meta = PROVIDER_META[prov] || {icon:'📰', name:prov, color:'#333'};
      const date = article.date ? new Date(article.date) : null;
      const desc = article.desc ? article.desc.replace(/<[^>]+>/g,'').slice(0,140) + (article.desc.length>140?'…':'') : '';
      const staleBadge = stale ? '<span style="margin-left:.4rem;padding:.1rem .4rem;border-radius:6px;background:rgba(245,158,11,.15);color:#b45309;border:1px solid rgba(245,158,11,.45);font-size:.7rem;font-weight:700">STALE</span>' : '';
      return `
        <a href="${article.url}" target="_blank" rel="noopener noreferrer" class="platform-card" style="border-color:var(--medium-gray); position:relative;">
          <div class="platform-icon" style="color:${meta.color}">${meta.icon}</div>
          <h3 class="platform-name">${article.title || 'New update'} ${staleBadge}</h3>
          <p class="platform-desc">${desc || meta.name + ' – latest update'}</p>
          <div style="margin-top:.6rem;font-size:.85rem;color:var(--text-secondary)">${date ? date.toLocaleDateString() : ''}</div>
          <div style="margin-top:.8rem">
            <a href="${status_url}" target="_blank" rel="noopener" style="font-weight:600;font-size:.9rem;color:${meta.color};text-decoration:none">Status →</a>
          </div>
        </a>`;
    };

    let loading=false; const setLoading=(on)=>{ loading=on; REFRESH.disabled=on; REFRESH.textContent= on ? 'Refreshing…' : 'Refresh'; };
    const showToast=(msg)=>{ TOAST_MSG.textContent=msg||'Something went wrong.'; TOAST.style.display='block'; clearTimeout(showToast._t); showToast._t=setTimeout(()=>TOAST.style.display='none',6000); };
    const hideToast=()=>{ TOAST.style.display='none'; };
    TOAST_CLOSE.addEventListener('click',hideToast);

    async function loadNews(force=false){
      if(loading) return; setLoading(true);
      try{
        const url = ENDPOINT + (force ? ('?t='+Date.now()) : '');
        const res = await fetch(url,{cache:'no-store'});
        if(!res.ok) throw new Error('HTTP '+res.status);
        const json = await res.json();
        const items = json.items || {}; const isStale = !!json.stale;
        GRID.innerHTML='';
        ['openai','anthropic','deepmind'].forEach(key=>{
          const group = items[key]; if(!group||!group.articles||!group.articles.length) return; const a=group.articles[0];
          GRID.insertAdjacentHTML('beforeend', card(key,a,group.status_url,isStale));
        });
        const ts = json.updated ? new Date(json.updated) : new Date();
        const parts = ['Last updated '+ts.toLocaleTimeString()]; if(isStale) parts.push('(served from cache)');
        UPDATED.textContent = parts.join(' · ');
        STALE.style.display = isStale ? 'inline-block' : 'none';
      }catch(e){
        GRID.innerHTML = '<div class="platform-card">Failed to load news. Try again later.</div>';
        showToast('Couldn’t refresh. Try again?');
        console.error('AI news load error', e);
      }finally{ setLoading(false); }
    }

    TRY_AGAIN.addEventListener('click', ()=>{ hideToast(); loadNews(true); });
    document.addEventListener('keydown', e=>{ if(e.key==='Escape') hideToast(); });
    REFRESH.addEventListener('click', ()=> loadNews(true));
    loadNews(); setInterval(loadNews, 5*60*1000);
  })();
  </script>

  <!-- AI Personality Shift logic -->
  <script>
  (()=>{
    const canvas=document.getElementById('ais-canvas'); const ctx=canvas.getContext('2d');
    const quoteEl=document.getElementById('ais-quote-text'); const moodLabel=document.getElementById('ais-mood');
    const dev=document.getElementById('ais-dev'); const devClose=document.getElementById('ais-dev-close');
    const fpsEl=document.getElementById('ais-fps'); const nodesEl=document.getElementById('ais-nodes'); const linksEl=document.getElementById('ais-links'); const logEl=document.getElementById('ais-log');

    const MOODS={
      future:{ colors:['#6ea8fe','#3f37c9','#80edff'], bg:'radial-gradient(1200px 600px at 30% 20%, rgba(110,168,254,.18), transparent)', nodes:90, speed:.35, linkDist:120, pulse:1.0, quotes:['Build the future by prototyping it today.','Most “science fiction” is just a backlog.','Latency drops, possibilities rise.'] },
      chaos:{ colors:['#ff6b6b','#ffd166','#8338ec'], bg:'radial-gradient(1200px 700px at 70% 30%, rgba(255,107,107,.18), transparent)', nodes:120, speed:.9, linkDist:90, pulse:1.6, quotes:['Out of chaos comes novel capability.','Exploration looks noisy until hindsight smooths it.','Embrace the weird—bugs discover features.'] },
      art:{ colors:['#ff9e00','#ff5400','#8338ec'], bg:'radial-gradient(900px 600px at 60% 70%, rgba(255,158,0,.14), transparent)', nodes:75, speed:.28, linkDist:140, pulse:1.1, quotes:['Art is a compression algorithm for feeling.','Tools evolve; taste ships the product.','Make it beautiful, then make it scale.'] },
      code:{ colors:['#64dfdf','#48bfe3','#5390d9'], bg:'radial-gradient(1000px 620px at 40% 60%, rgba(72,191,227,.16), transparent)', nodes:85, speed:.42, linkDist:130, pulse:1.0, quotes:['Every line of code is a hypothesis.','APIs are negotiations between futures.','Readable now beats clever later.'] },
      calm:{ colors:['#06ffa5','#00b4d8','#90f1ef'], bg:'radial-gradient(1100px 680px at 50% 50%, rgba(6,255,165,.12), transparent)', nodes:70, speed:.18, linkDist:150, pulse:.8, quotes:['Systems that breathe last longer.','Calm UIs reduce cognitive debt.','Stability is a feature.'] },
      retro:{ colors:['#00ff88','#39ff14','#08f7fe'], bg:'radial-gradient(900px 600px at 30% 70%, rgba(0,255,136,.18), transparent)', nodes:60, speed:.22, linkDist:140, pulse:1.3, quotes:['Hello, world—again and again.','8‑bit dreams, 64‑bit budgets.','Monospace, major impact.'] },
      desert:{ colors:['#ff6b35','#f59e0b','#ffd29d'], bg:'radial-gradient(1200px 600px at 70% 60%, rgba(245,158,11,.16), transparent)', nodes:80, speed:.30, linkDist:135, pulse:1.2, quotes:['Signal travels farthest across quiet sand.','Sparks matter where everything burns.','The Wasteland rewards the curious.'] }
    };

    const fit=()=>{ const r=canvas.getBoundingClientRect(); const dpr=Math.min(window.devicePixelRatio||1,2); canvas.width=Math.floor(r.width*dpr); canvas.height=Math.floor(r.height*dpr); ctx.setTransform(dpr,0,0,dpr,0,0); };
    const rand=(min,max)=>Math.random()*(max-min)+min;
    class Node{ constructor(w,h){ this.x=rand(0,w); this.y=rand(0,h); this.vx=rand(-1,1); this.vy=rand(-1,1); this.size=rand(1.6,3.6); this.phase=Math.random()*Math.PI*2; } step(w,h,speed,pulse){ this.x+=this.vx*speed; this.y+=this.vy*speed; if(this.x<0||this.x>w) this.vx*=-1; if(this.y<0||this.y>h) this.vy*=-1; this.phase+=0.03*pulse; }}

    let nodes=[], links=0, mood='future', palette=MOODS[mood]; let frames=0,lastFPSUpdate=0;
    const rebuild=()=>{ const w=canvas.clientWidth,h=canvas.clientHeight; nodes=Array.from({length:palette.nodes},()=>new Node(w,h)); canvas.parentElement.style.setProperty('background',`linear-gradient(135deg, rgba(0,0,0,0), rgba(0,0,0,0)), ${palette.bg}`); };
    const draw=()=>{ const w=canvas.clientWidth,h=canvas.clientHeight; ctx.clearRect(0,0,w,h); links=0; for(let i=0;i<nodes.length;i++){ const a=nodes[i]; for(let j=i+1;j<nodes.length;j++){ const b=nodes[j]; const dx=a.x-b.x, dy=a.y-b.y; const d2=dx*dx+dy*dy; const max=palette.linkDist, max2=max*max; if(d2<max2){ const t=1-(d2/max2); ctx.globalAlpha=Math.max(.12,t*.6); const c=palette.colors[(i+j)%palette.colors.length]; ctx.strokeStyle=c; ctx.beginPath(); ctx.moveTo(a.x,a.y); ctx.lineTo(b.x,b.y); ctx.stroke(); links++; } } } ctx.globalAlpha=1; for(const n of nodes){ const c=palette.colors[Math.floor((n.phase*10)%palette.colors.length)]; ctx.fillStyle=c; const s=n.size+Math.sin(n.phase)*.6; ctx.beginPath(); ctx.arc(n.x,n.y,s,0,Math.PI*2); ctx.fill(); } };
    const step=(ts)=>{ const w=canvas.clientWidth,h=canvas.clientHeight; for(const n of nodes) n.step(w,h,palette.speed,palette.pulse); draw(); frames++; if(!lastFPSUpdate) lastFPSUpdate=ts; if(ts-lastFPSUpdate>500){ const fps=Math.round(frames*1000/(ts-lastFPSUpdate)); frames=0; lastFPSUpdate=ts; if(!dev.hasAttribute('hidden')) fpsEl.textContent=fps; } requestAnimationFrame(step); };

    const burst=()=>{ const w=canvas.clientWidth,h=canvas.clientHeight,cx=w/2,cy=h/2; const parts=24,maxR=Math.min(w,h)/3; ctx.save(); for(let i=0;i<parts;i++){ const ang=(i/parts)*Math.PI*2; const r=maxR*(0.2+Math.random()*0.8); ctx.globalAlpha=.66; ctx.fillStyle=palette.colors[i%palette.colors.length]; ctx.beginPath(); ctx.arc(cx+Math.cos(ang)*r, cy+Math.sin(ang)*r, 2+Math.random()*3, 0, Math.PI*2); ctx.fill(); } ctx.restore(); };

    const applyMood=(name)=>{ name=(name||'').toLowerCase().trim(); const keys=Object.keys(MOODS); const found=keys.find(k=>name.includes(k))||keys[Math.floor(Math.random()*keys.length)]; mood=found; palette=MOODS[mood]; moodLabel.textContent=mood; quoteEl.textContent=palette.quotes[Math.floor(Math.random()*palette.quotes.length)]; burst(); rebuild(); if(!dev.hasAttribute('hidden')){ logEl.textContent=`[${new Date().toLocaleTimeString()}] mood → ${mood}\n` + logEl.textContent; } };

    const form=document.getElementById('ais-form'); const input=document.getElementById('ais-word');
    form.addEventListener('submit',e=>{ e.preventDefault(); applyMood(input.value); input.select(); });
    document.querySelectorAll('.ais-chip').forEach(btn=> btn.addEventListener('click',()=> applyMood(btn.dataset.mood)));

    const secret=['ArrowUp','ArrowUp','ArrowDown','ArrowDown','ArrowLeft','ArrowRight','ArrowLeft','ArrowRight','b','a']; let pos=0;
    window.addEventListener('keydown',e=>{ if(e.key===secret[pos] || e.key.toLowerCase()===secret[pos]){ pos++; if(pos===secret.length){ dev.toggleAttribute('hidden'); pos=0; rebuild(); } } else { pos=0; } });
    devClose.addEventListener('click',()=> dev.setAttribute('hidden',''));

    const handleResize=()=>{ fit(); rebuild(); };
    window.addEventListener('resize', handleResize);

    fit(); rebuild(); requestAnimationFrame(step);
    setInterval(()=> applyMood(Object.keys(MOODS)[Math.floor(Math.random()*Object.keys(MOODS).length)]), 35000);
    applyMood('future');
    setInterval(()=>{ if(!dev.hasAttribute('hidden')){ nodesEl.textContent=nodes.length; linksEl.textContent=links; } },500);
  })();
  </script>

</body>
</html>
